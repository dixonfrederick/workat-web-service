image: gradle:7.4-jdk11-alpine

variables:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'

before_script:
  - echo pwd
  - export GRADLE_USER_HOME=`pwd`/.gradle
  # Remove caches
  - rm -f  .gradle/caches/modules-2/modules-2.lock
  - rm -fr .gradle/caches/*/plugin-resolution/

stages:
  - test
  - sonarqube
  - deploy

test:
  stage: test
  only:
    - staging
  image: adrianardizza/checkstyle
  allow_failure: true
  script:
    - checkstyle checkstyle.xml src/main/java

sonarqube:
  stage: sonarqube
  only:
    - staging
    - master
  image: gradle:7.4-jdk11-alpine
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: gradle sonarqube -Dsonar.qualitygate.wait=true
  allow_failure: true

deploy:
  stage: deploy
  only:
    - staging
  image: ruby:latest
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
    - heroku run --app $HEROKU_APP_NAME migrate
